{"version":3,"file":"static/js/923.f9406a19.chunk.js","mappings":"uQASe,SAASA,IAAS,IAAD,IAC9B,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAASC,EAAAA,EAAAA,MAETC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,UAuB3D,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEHC,EAAAA,EAAAA,IAAgBV,EAAOW,IAFpB,QAEhBC,EAFgB,SAIpBf,EAAgBe,GAElBb,GAAa,GANS,gDAQtBc,QAAQC,MAAM,gCAAd,MACAf,GAAa,GATS,yDAAH,qDAavBc,QAAQE,IAAIb,GAERF,EAAOW,IACTF,GAEH,GAAE,CAACT,EAAOW,GAAGT,KAGZ,4BACE,SAAC,KAAD,CAAMc,GAAIZ,EAAoBa,QAA9B,qBACCnB,GACC,oDACEoB,OAAOC,KAAKvB,GAAcwB,OAAS,GACrC,4BACE,wBAAKxB,EAAayB,kBAClB,uBAAIzB,EAAa0B,YACjB,gBAAKC,IAAG,yCAAoC3B,EAAa4B,aAAeC,IAAK7B,EAAa8B,SAC5F,2BACA,yBACC,SAAC,KAAD,CAAMV,GAAG,OAAT,qBAED,yBACC,SAAC,KAAD,CAAMA,GAAG,UAAT,wBAEF,SAAE,KAAF,WAIC,wDAEF,wBAAKhB,EAAOW,OAGjB,C","sources":["pages/filter.jsx"],"sourcesContent":["import { useEffect, useState,useRef } from \"react\";\nimport {  useParams } from \"react-router-dom\";\nimport { getMovieDetails } from \"api\";\nimport { Link } from \"react-router-dom\";\nimport { Outlet, useLocation} from \"react-router-dom\";\n\n\n\n\nexport default function Cards() {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const params = useParams();\n  \n  const location = useLocation()\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movie')\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMovieDetails(params.id);\n        if (data) {\n          setMovieDetails(data);\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n        setIsLoading(false);\n      }\n    };\n\n    console.log(location)\n\n    if (params.id) {\n      fetchMovieDetails();\n    }\n  }, [params.id,location]);\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>Go Back</Link>\n      {isLoading ? (\n        <p>Loading movie details...</p>\n      ) : Object.keys(movieDetails).length > 0 ? (\n        <div>\n          <h2>{movieDetails.original_title}</h2>\n          <p>{movieDetails.overview}</p>\n          <img src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`} alt={movieDetails.title} />\n        <ul>\n        <li\n        ><Link to=\"Cast\">Cast</Link>\n        </li>\n        <li\n        ><Link to=\"Reviews\">Reviews</Link>\n                          </li>\n       < Outlet/>\n    </ul>\n     </div>\n      ) : (\n        <p>No movie details available.</p>\n      )}\n      <h1>{params.id}</h1>\n    </div>\n  );\n}\n"],"names":["Cards","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","params","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetails","getMovieDetails","id","data","console","error","log","to","current","Object","keys","length","original_title","overview","src","poster_path","alt","title"],"sourceRoot":""}